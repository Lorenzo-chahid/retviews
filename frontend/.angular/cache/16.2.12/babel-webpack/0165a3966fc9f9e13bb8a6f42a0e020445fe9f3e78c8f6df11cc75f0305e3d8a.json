{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8000';\n  }\n  createUser(user) {\n    return this.http.post(`${this.baseUrl}/users/`, user);\n  }\n  login(email, password) {\n    return this.http.post('/api/token', {\n      username: email,\n      password: password\n    }).pipe(tap(res => {\n      localStorage.setItem('auth_token', res.access_token);\n    }));\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["tap","AuthService","constructor","http","baseUrl","createUser","user","post","login","email","password","username","pipe","res","localStorage","setItem","access_token","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/lorenzochahid/Retviews/frontend/src/app/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http: HttpClient) { }\n\n  private baseUrl = 'http://localhost:8000';\n\n  createUser(user: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}/users/`, user);\n  }\n\n\n  login(email: string, password: string): Observable<{access_token: string, token_type: string}> {\n    return this.http.post<{access_token: string, token_type: string}>('/api/token', {username: email, password: password})\n      .pipe(tap(res => {\n        localStorage.setItem('auth_token', res.access_token);\n      }));\n  }\n}\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAMpC,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAEhB,KAAAC,OAAO,GAAG,uBAAuB;EAFD;EAIxCC,UAAUA,CAACC,IAAS;IAClB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,SAAS,EAAEE,IAAI,CAAC;EACvD;EAGAE,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACP,IAAI,CAACI,IAAI,CAA6C,YAAY,EAAE;MAACI,QAAQ,EAAEF,KAAK;MAAEC,QAAQ,EAAEA;IAAQ,CAAC,CAAC,CACnHE,IAAI,CAACZ,GAAG,CAACa,GAAG,IAAG;MACdC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEF,GAAG,CAACG,YAAY,CAAC;IACtD,CAAC,CAAC,CAAC;EACP;EAAC,QAAAC,CAAA,G;qBAfUhB,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXrB,WAAW;IAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}