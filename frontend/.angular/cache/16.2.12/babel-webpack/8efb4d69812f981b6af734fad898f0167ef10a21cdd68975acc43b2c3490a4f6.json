{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nfunction LoginComponent_p_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.username = '';\n    this.password = '';\n    this.errorMessage = '';\n  }\n  onLogin() {\n    console.log(\"YOUPI\");\n    console.log('Tentative de connexion avec le nom d\\'utilisateur:', this.username);\n    console.log('Tentative de connexion avec le mot de passe:', this.password);\n    this.authService.login(this.username, this.password).subscribe({\n      next: () => {\n        console.log('Connexion réussie');\n        this.router.navigate(['/dashboard']);\n      },\n      error: error => {\n        console.error('Erreur de connexion', error);\n        this.errorMessage = 'Échec de la connexion. Veuillez réessayer.';\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 13,\n    vars: 3,\n    consts: [[1, \"login-container\"], [3, \"ngSubmit\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\", 2);\n        i0.ɵɵtext(4, \"Nom d'utilisateur:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Mot de passe:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"button\", 6);\n        i0.ɵɵtext(11, \"Se connecter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, LoginComponent_p_12_Template, 2, 1, \"p\", 7);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      }\n    },\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","LoginComponent","constructor","authService","router","username","password","onLogin","console","log","login","subscribe","next","navigate","error","_","ɵɵdirectiveInject","i1","AuthService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_1_listener","LoginComponent_Template_input_ngModelChange_5_listener","$event","LoginComponent_Template_input_ngModelChange_9_listener","ɵɵtemplate","LoginComponent_p_12_Template","ɵɵproperty"],"sources":["/Users/lorenzochahid/Retviews/frontend/src/app/login/login.component.ts","/Users/lorenzochahid/Retviews/frontend/src/app/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  username = '';\n  password = '';\n  errorMessage = '';\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  onLogin() {\n    console.log(\"YOUPI\")\n    console.log('Tentative de connexion avec le nom d\\'utilisateur:', this.username);\n    console.log('Tentative de connexion avec le mot de passe:', this.password);\n\n    this.authService.login(this.username, this.password).subscribe({\n      next: () => {\n        console.log('Connexion réussie');\n        this.router.navigate(['/dashboard']);\n      },\n      error: (error) => {\n        console.error('Erreur de connexion', error);\n        this.errorMessage = 'Échec de la connexion. Veuillez réessayer.';\n      },\n    });\n  }\n}\n","<div class=\"login-container\">\n    <form (ngSubmit)=\"onLogin()\">\n        <div>\n            <label for=\"username\">Nom d'utilisateur:</label>\n            <input type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" required>\n        </div>\n        <div>\n            <label for=\"password\">Mot de passe:</label>\n            <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n        </div>\n        <button type=\"submit\">Se connecter</button>\n        <p *ngIf=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\n    </form>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}