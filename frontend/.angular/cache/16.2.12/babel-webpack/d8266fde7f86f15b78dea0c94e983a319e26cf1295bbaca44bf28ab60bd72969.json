{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClothingService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8000';\n  }\n  getClothingItems() {\n    const token = localStorage.getItem('auth_token');\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    return this.http.get(`${this.baseUrl}/clothing-items/`, {\n      headers\n    });\n  }\n  addClothingItem(clothingItem, userId, categoryId) {\n    return this.http.post(`${this.baseUrl}/new-clothing/`, {\n      ...clothingItem,\n      user_id: userId,\n      category_id: categoryId\n    });\n  }\n  static #_ = this.ɵfac = function ClothingService_Factory(t) {\n    return new (t || ClothingService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClothingService,\n    factory: ClothingService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","ClothingService","constructor","http","baseUrl","getClothingItems","token","localStorage","getItem","headers","get","addClothingItem","clothingItem","userId","categoryId","post","user_id","category_id","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/lorenzochahid/Retviews/frontend/src/app/clothing.service.ts"],"sourcesContent":["// clothing.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface ClothingItem {\n  id: number;\n  name: string;\n  description: string;\n  image_url: string;\n  category: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClothingService {\n  private baseUrl = 'http://localhost:8000';\n\n  constructor(private http: HttpClient) {}\n\n\ngetClothingItems(): Observable<ClothingItem[]> {\n  const token = localStorage.getItem('auth_token'); \n  const headers = new HttpHeaders({\n    'Authorization': `Bearer ${token}`\n  });\n\n  return this.http.get<ClothingItem[]>(`${this.baseUrl}/clothing-items/`, { headers });\n}\n\naddClothingItem(clothingItem: any, userId: number, categoryId: number): Observable<any> {\n  return this.http.post(`${this.baseUrl}/new-clothing/`, { ...clothingItem, user_id: userId, category_id: categoryId });\n}\n\n}\n"],"mappings":"AAGA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAc9D,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,uBAAuB;EAEF;EAGzCC,gBAAgBA,CAAA;IACd,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChD,MAAMC,OAAO,GAAG,IAAIT,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAUM,KAAK;KACjC,CAAC;IAEF,OAAO,IAAI,CAACH,IAAI,CAACO,GAAG,CAAiB,GAAG,IAAI,CAACN,OAAO,kBAAkB,EAAE;MAAEK;IAAO,CAAE,CAAC;EACtF;EAEAE,eAAeA,CAACC,YAAiB,EAAEC,MAAc,EAAEC,UAAkB;IACnE,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,GAAG,IAAI,CAACX,OAAO,gBAAgB,EAAE;MAAE,GAAGQ,YAAY;MAAEI,OAAO,EAAEH,MAAM;MAAEI,WAAW,EAAEH;IAAU,CAAE,CAAC;EACvH;EAAC,QAAAI,CAAA,G;qBAjBYjB,eAAe,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAftB,eAAe;IAAAuB,OAAA,EAAfvB,eAAe,CAAAwB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}